@{
    ViewBag.Title = "Loan Refunds";
}
@using System.Globalization
@using Microsoft.AspNetCore.Identity
@using Softmax.XCollections.Data.Enums
@inject UserManager<ApplicationUser> UserManager
@model IEnumerable<Softmax.XCollections.Models.RefundModel>
<div class="row">
    <div class="col-md-12">
        <div class="card-header">
            <i class="fa fa-table"></i> @ViewBag.Title - <i><strong>@ViewData["RecordCount"] </strong> Record(s)</i>
            <span class="pull-right">
                @Html.ActionLink("New Refund", "Payment", "Loans", new { id = @ViewData["LoanId"] }, new { @class = "btn btn-primary" })
            </span>
        </div>
        <div class="card-body">
            <form asp-action="History/@ViewData["LoanId"]" method="get">
                <div class="form-actions no-color">
                    <p>
                        Search: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                        <input type="submit" value="Search" class="btn btn-default btn-sm" /> |
                        <a asp-action="History/@ViewData["LoanId"]">Back to Full List</a>
                    </p>
                </div>
            </form>
            <table class="table table-bordered" cellspacing="0">
                <thead>
                    <tr>
                        <th colspan="5">
                            <h3>@ViewData["Name"] - @ViewData["Account"] (@ViewData["Product"])</h3>
                        </th>
                    </tr>
                    <tr>
                        <th>
                            <a asp-action="History/@ViewData["LoanId"]" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Date</a>
                        </th>
                    <th>
                        Loan Officer
                    </th>
                        <th>
                            <a asp-action="History/@ViewData["LoanId"]" asp-route-sortOrder="@ViewData["AmountSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Amount</a>
                        </th>
                        <th>
                            Outstanding
                        </th>
                        <th>
                            Status
                        </th>

                    </tr>
                </thead>

                <tbody>
                    @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.DateCreated
                        </td>
                    
                        <td>
                            @item.Loan.Employee.AspNetUsers.FirstName @item.Loan.Employee.AspNetUsers.LastName

                        </td>
        

                        @*<td>
                            @item.Loan.Product.Name

                        </td>*@
                        <td>
                            @item.Amount.ToString("C", new CultureInfo("HA-LATN-NG"))
                        </td>


                        <td>
                            @item.Balance.ToString("C", new CultureInfo("HA-LATN-NG"))
                        </td>
                        <td>
                            @if (item.StatusCode == StatusCode.Pending)
                    {
                        <span class="text-danger">Awaiting Confirmation</span> <br />
                if (await UserManager.IsInRoleAsync(await UserManager.FindByNameAsync(User.Identity.Name), "Supervisor"))
                {
                    @Html.ActionLink("Confirm", "ConfirmRefund", "Loans", new { id = item.RefundId }, new { @class = "btn btn-outline-primary btn-sm" })
                    @Html.ActionLink("Decline", "DeclineRefund", "Loans", new { id = item.RefundId }, new { @class = "btn btn-outline-danger btn-sm" })
        }

    }
    else if (item.StatusCode == StatusCode.Declined)
    {
        <span class="btn btn-outline-danger btn-sm">Declined</span>
}

else
{
        <span class="btn btn-outline-success btn-sm">Confirmed</span>
}


                        </td>


                    </tr>

        }
    }
                </tbody>
            </table>
            @{
        var PaginatedModel = (PaginatedList<RefundModel>)Model;

        string prevDisabled = !PaginatedModel.HasPreviousPage ? "disabled" : "";

        string nextDisabled = !PaginatedModel.HasNextPage ? "disabled" : "";
            }

            <a asp-action="History/@ViewData["LoanId"]"
               asp-route-sortOrder="@ViewData["CurrentSortOrder"]"
               asp-route-page="@(PaginatedModel.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["FilterParam"]"
               class="btn btn-primary @prevDisabled">
                Previous

            </a>

            <a asp-action="History/@ViewData["LoanId"]"
               asp-route-sortOrder="@ViewData["CurrentSortOrder"]"
               asp-route-page="@(PaginatedModel.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["FilterParam"]"
               class="btn btn-primary @nextDisabled">
                Next

            </a>
            <span class="float-right"><a asp-action="History/@ViewData["CustomerId"]"><i class="fa fa-arrow-right fa-2x" aria-hidden="true"></i></a></span>
        </div>
        <div class="card-footer small text-muted">Last Update @DateTime.Now</div>
    </div>
</div>